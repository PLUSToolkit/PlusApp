#-----------------------------------------------------------------------------
# Configuration file for the Public Library for Ultrasound (PLUS) toolkit
#
# Â© Copyright 2016 The Laboratory for Percutaneous Surgery, Queen's University, Canada
#
# This file can be passed to a CMake FIND_PACKAGE call with the following syntax:
#
# FIND_PACKAGE(PlusLib @PLUSLIB_VERSION@ <REQUIRED|QUIET> <NO_MODULE>)
#   If NO_MODULE is included, set the variable PlusLib_DIR:PATH=@CMAKE_BINARY_DIR@
# 
# Once successful, you can either use the USE_FILE approach by the following CMake command:
# INCLUDE(${PLUS_USE_FILE})
#
# Or you can use the following variables to configure your CMake project:
#  PlusLib_INCLUDE_DIRS - include directories for Plus headers
#  PlusLib_LIBRARIES - list of CMake targets produced by this build of Plus
#  PlusLib_DATA_DIR - directory containing data collector configuration files, sample images, and 3d models
#-----------------------------------------------------------------------------

SET(PlusLib_TARGETS_FILE @CMAKE_BINARY_DIR@/PlusLibTargets.cmake)
INCLUDE(${PlusLib_TARGETS_FILE})

# Tell the user project where to find our headers and libraries
SET(PlusLib_INCLUDE_DIRS "@PLUSLIB_INCLUDE_DIRS@")
SET(PlusLib_DATA_DIR "@PLUSLIB_DATA_DIR@")
SET(PlusLib_LIBRARIES "@PLUSLIB_DEPENDENCIES@")

# Tell the user project where to find Plus use file
SET(PlusLib_USE_FILE "@CMAKE_BINARY_DIR@/UsePlusLib.cmake" )

# Get the location for IntersonCxx
SET(PLUS_USE_INTERSONSDKCXX_VIDEO "@PLUS_USE_INTERSONSDKCXX_VIDEO@")
IF(PLUS_USE_INTERSONSDKCXX_VIDEO)
  IF(NOT DEFINED IntersonSDKCxx_DIR)
    SET(IntersonSDKCxx_DIR @IntersonSDKCxx_DIR@)
  ENDIF()
  FIND_PACKAGE(IntersonSDKCxx REQUIRED)
ENDIF()

IF( @PLUS_USE_EPIPHAN@ AND NOT TARGET Epiphan )
  ADD_LIBRARY(Epiphan SHARED IMPORTED)
  SET_PROPERTY(TARGET Epiphan PROPERTY IMPORTED_IMPLIB @EPIPHAN_LIB_DIR@/frmgrab@CMAKE_STATIC_LIBRARY_SUFFIX@)
  SET_PROPERTY(TARGET Epiphan PROPERTY IMPORTED_LOCATION @EPIPHAN_BINARY_DIR@/frmgrab@CMAKE_SHARED_LIBRARY_SUFFIX@)
  LIST(APPEND PlusLib_LIBRARIES Epiphan)
ENDIF()

IF( @PLUS_USE_Ascension3DG@ AND NOT TARGET Ascension3DG )
  ADD_LIBRARY(Ascension3DG SHARED IMPORTED)
  SET_PROPERTY(TARGET Ascension3DG PROPERTY IMPORTED_IMPLIB @Ascension3DG_LIB_FILE@)
  SET_PROPERTY(TARGET Ascension3DG PROPERTY IMPORTED_LOCATION @Ascension3DG_SHARED_LIB_FILE@)
  LIST(APPEND PlusLib_LIBRARIES Ascension3DG)
ENDIF()

IF( @PLUS_USE_Ascension3DGm@ AND NOT TARGET Ascension3DGm )
  ADD_LIBRARY(Ascension3DGm SHARED IMPORTED)
  SET_PROPERTY(TARGET Ascension3DGm PROPERTY IMPORTED_IMPLIB @ATC_MEDSAFE_LIB_DIR@/ATC3DGm@CMAKE_STATIC_LIBRARY_SUFFIX@)
  SET_PROPERTY(TARGET Ascension3DGm PROPERTY IMPORTED_LOCATION @Ascension3DG_SHARED_LIB_FILE@)
  LIST(APPEND PlusLib_LIBRARIES Ascension3DGm)
ENDIF()

IF( @PLUS_USE_PHIDGET_SPATIAL_TRACKER@ AND NOT TARGET phidget )
  ADD_LIBRARY(phidget SHARED IMPORTED)
  SET_PROPERTY(TARGET phidget PROPERTY IMPORTED_IMPLIB @PHIDGET_SPATIAL_LIB_DIR@/phidget21@CMAKE_STATIC_LIBRARY_SUFFIX@)
  SET_PROPERTY(TARGET phidget PROPERTY IMPORTED_LOCATION @PHIDGET_SPATIAL_BINARY_DIR@/phidget21@CMAKE_SHARED_LIBRARY_SUFFIX@)
  LIST(APPEND PlusLib_LIBRARIES phidget)
ENDIF()

IF( @PLUS_USE_BRACHY_TRACKER@ AND NOT TARGET USDigitalEncoders )
  ADD_LIBRARY(USDigitalEncoders SHARED IMPORTED)
  SET_PROPERTY(TARGET USDigitalEncoders PROPERTY IMPORTED_IMPLIB @USDIGITAL_SEI_LIB_DIR@/SEIDrv32@CMAKE_STATIC_LIBRARY_SUFFIX@)
  SET_PROPERTY(TARGET USDigitalEncoders PROPERTY IMPORTED_LOCATION @USDIGITAL_SEI_BINARY_DIR@/SEIDrv32@CMAKE_SHARED_LIBRARY_SUFFIX@)
  LIST(APPEND PlusLib_LIBRARIES USDigitalEncoders)
ENDIF()

IF( @PLUS_USE_NVIDIA_DVP@ AND NOT TARGET NVidiaDVP )
  ADD_LIBRARY(NVidiaDVP SHARED IMPORTED)
  SET_PROPERTY(TARGET NVidiaDVP PROPERTY IMPORTED_IMPLIB @NVIDIA_DVP_LIB_DIR@/dvp@CMAKE_STATIC_LIBRARY_SUFFIX@)
  SET_PROPERTY(TARGET NVidiaDVP PROPERTY IMPORTED_LOCATION @NVIDIA_DVP_BINARY_DIR@/dvp@CMAKE_SHARED_LIBRARY_SUFFIX@)
  LIST(APPEND PlusLib_LIBRARIES NVidiaDVP)
ENDIF()

IF(@PLUS_USE_OpenIGTLink@)
  FIND_PACKAGE(OpenIGTLink PATHS "@OpenIGTLink_DIR@" NO_MODULE REQUIRED)
ENDIF()